From: Matt Layher <mdlayher@gmail.com>
Date: Sat, 29 Apr 2023 10:26:55 -0400
Subject: vsock: check for ECONNRESET and ENODEV in failed Dial test

Origin: backport https://github.com/mdlayher/vsock/commit/76b624c2
---
 integration_linux_test.go | 22 ++++++++++++++++++----
 1 file changed, 18 insertions(+), 4 deletions(-)

diff --git a/integration_linux_test.go b/integration_linux_test.go
index 95c7299..36f35b6 100644
--- a/integration_linux_test.go
+++ b/integration_linux_test.go
@@ -5,6 +5,7 @@ package vsock_test
 
 import (
 	"bytes"
+	"errors"
 	"fmt"
 	"io"
 	"math"
@@ -212,18 +213,31 @@ func TestIntegrationConnDialNoListener(t *testing.T) {
 	for _, port := range []uint32{max - 2, max - 1, max} {
 		_, err := vsock.Dial(vsock.Local, port, nil)
 		if err == nil {
-			// It seems local binds don't work in GitHub actions right now.
-			// Skip for now.
-			skipOldKernel(t)
+			t.Fatal("dial succeeded, but should not have")
 		}
 
 		vsutil.SkipDeviceError(t, err)
 
+		got, ok := err.(*net.OpError)
+		if !ok {
+			t.Fatalf("expected *net.OpError, but got %T", err)
+		}
+
+		// Expect one of ECONNRESET or ENODEV depending on the kernel.
+		switch {
+		case errors.Is(got.Err, unix.ECONNRESET), errors.Is(got.Err, unix.ENODEV):
+			// OK.
+		default:
+			t.Fatalf("unexpected syscall error: %v", got.Err)
+		}
+
+		// Zero out the error comparison.
+		got.Err = nil
+
 		want := &net.OpError{
 			Op:   "dial",
 			Net:  "vsock",
 			Addr: &vsock.Addr{ContextID: vsock.Local, Port: port},
-			Err:  os.NewSyscallError("connect", unix.ECONNRESET),
 		}
 
 		if diff := cmp.Diff(want, err); diff != "" {
